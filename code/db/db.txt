sqlite3 kpop.db

CREATE TABLE users (
    user_id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    email TEXT NOT NULL,
    encrypted_password TEXT NOT NULL,
    dob TEXT,
    artist TEXT, 
    member TEXT,
    city TEXT,
    state TEXT,
    zipcode TEXT,
    distance TEXT,
    language TEXT
);

CREATE TABLE groups (
    group_id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

.mode csv
.import db/groups.csv groups

CREATE TABLE members (
    member_id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    group_id INTEGER NOT NULL,
    FOREIGN KEY(group_id) REFERENCES groups(group_id)
);

.mode csv
.import db/members.csv members

CREATE TABLE user_albums (
    user_id INTEGER NOT NULL,
    group_id INTEGER NOT NULL,
    album_id INTEGER NOT NULL,
    name TEXT NOT NULL,
    collected INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(user_id)
);

CREATE TABLE user_photos (
    user_id INTEGER NOT NULL,
    member_id INTEGER NOT NULL,
    group_id INTEGER NOT NULL,
    photo_id INTEGER NOT NULL,
    collected INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(user_id)
);

CREATE TABLE products (
    product_id INTEGER PRIMARY KEY,
    user_id INTEGER NOT NULL,
    group_id INTEGER NOT NULL,
    sell_type INTEGER NOT NULL,
    album_id INTEGER NOT NULL,
    member_id INTEGER,
    delivery INTEGER NOT NULL,
    zipcode INTEGER,
    distance INTEGER,
    shipping_fee REAL,
    price REAL NOT NULL,
    sold INTEGER NOT NULL,
    confirm INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES user(user_id)
);

CREATE TABLE cart (
    cart_id INTEGER PRIMARY KEY,
    user_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES user(user_id),
    FOREIGN KEY(product_id) REFERENCES products(product_id)
);

CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY,
    user_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    confirm INTEGER NOT NULL,
    FOREIGN KEY(user_id) REFERENCES user(user_id),
    FOREIGN KEY(product_id) REFERENCES products(product_id)
);